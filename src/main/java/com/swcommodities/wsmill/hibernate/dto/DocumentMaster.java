package com.swcommodities.wsmill.hibernate.dto;
// Generated Feb 18, 2014 3:38:53 PM by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * DocumentMaster generated by hbm2java
 */
@Entity
@Table(name = "document_master"
)
public class DocumentMaster implements java.io.Serializable {

    private Integer id;
    private Short no;
    private String name;
    private String type;
    private Byte status;
    private Set<Documents> documentses = new HashSet<Documents>(0);

    public DocumentMaster() {
    }

    public DocumentMaster(Short no, String name, String type, Byte status, Set<Documents> documentses) {
        this.no = no;
        this.name = name;
        this.type = type;
        this.status = status;
        this.documentses = documentses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "no")
    public Short getNo() {
        return this.no;
    }

    public void setNo(Short no) {
        this.no = no;
    }

    @Column(name = "name")
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "type", length = 50)
    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    @Column(name = "status")
    public Byte getStatus() {
        return this.status;
    }

    public void setStatus(Byte status) {
        this.status = status;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "documentMaster")
    public Set<Documents> getDocumentses() {
        return this.documentses;
    }

    public void setDocumentses(Set<Documents> documentses) {
        this.documentses = documentses;
    }

}
