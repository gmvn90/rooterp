package com.swcommodities.wsmill.hibernate.dto;
// Generated Feb 18, 2014 3:38:53 PM by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.ArrayList;
import java.util.List;
import java.util.SortedSet;
import java.util.TreeSet;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.Sort;
import org.hibernate.annotations.SortType;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonView;
import com.swcommodities.wsmill.domain.model.HasName;
import com.swcommodities.wsmill.hibernate.dto.view.CompanyJsonView;

/**
 * CompanyMaster generated by hbm2java
 */
@Entity
@Table(name = "company_master")
public class CompanyMaster extends AbstractTimestampEntity implements java.io.Serializable, HasName {

	private Integer id;
	private String fullName;
	private String fullNameVn;
	private String name;
	private String nameVn;
	private String address1;
	private String address1Vn;
	private String address2;
	private String address2Vn;
	private String representative;
	private String representativeRole;
	private String representativeRoleVn;
	private String taxCode;
	private String email;
	private String fax;
	private String telephone;
	private Country country;
	private String countryId;
	private Boolean active;
	private SortedSet<CompanyOption> companyOptions = new TreeSet<>();
	private List<CompanyTypeMaster> companyTypes;
	private boolean hasType;

	public CompanyMaster() {
	}

	public CompanyMaster(Integer id) {
		this.id = id;
	}
    
    public CompanyMaster(int id, String name) {
        this.id = id;
        this.name = name;
    }

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	@JsonView(CompanyJsonView.PublicView.class)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "full_name", length = 150)
	@JsonView(CompanyJsonView.PublicView.class)
	public String getFullName() {
		return this.fullName;
	}

	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	@Column(name = "full_name_vn", length = 150)
	@JsonView(CompanyJsonView.PublicView.class)
	public String getFullNameVn() {
		return this.fullNameVn;
	}

	public void setFullNameVn(String fullNameVn) {
		this.fullNameVn = fullNameVn;
	}

	@Column(name = "name", length = 30, unique = true)
	@JsonView(CompanyJsonView.PublicView.class)
    @Override
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "name_vn", length = 30)
	@JsonView(CompanyJsonView.PublicView.class)
	public String getNameVn() {
		return this.nameVn;
	}

	public void setNameVn(String nameVn) {
		this.nameVn = nameVn;
	}

	@Column(name = "address1", length = 150)
	@JsonView(CompanyJsonView.PublicView.class)
	public String getAddress1() {
		return this.address1;
	}

	public void setAddress1(String address1) {
		this.address1 = address1;
	}

	@Column(name = "address1_vn", length = 150)
	@JsonView(CompanyJsonView.PublicView.class)
	public String getAddress1Vn() {
		return this.address1Vn;
	}

	public void setAddress1Vn(String address1Vn) {
		this.address1Vn = address1Vn;
	}

	@Column(name = "address2", length = 150)
	@JsonView(CompanyJsonView.PublicView.class)
	public String getAddress2() {
		return this.address2;
	}

	public void setAddress2(String address2) {
		this.address2 = address2;
	}

	@Column(name = "address2_vn", length = 150)
	@JsonView(CompanyJsonView.PublicView.class)
	public String getAddress2Vn() {
		return this.address2Vn;
	}

	public void setAddress2Vn(String address2Vn) {
		this.address2Vn = address2Vn;
	}

	@Column(name = "representative", length = 150)
	@JsonView(CompanyJsonView.PublicView.class)
	public String getRepresentative() {
		return this.representative;
	}

	public void setRepresentative(String representative) {
		this.representative = representative;
	}

	@Column(name = "representative_role", length = 150)
	@JsonView(CompanyJsonView.PublicView.class)
	public String getRepresentativeRole() {
		return this.representativeRole;
	}

	public void setRepresentativeRole(String representativeRole) {
		this.representativeRole = representativeRole;
	}

	@Column(name = "representative_role_vn", length = 150)
	@JsonView(CompanyJsonView.PublicView.class)
	public String getRepresentativeRoleVn() {
		return this.representativeRoleVn;
	}

	public void setRepresentativeRoleVn(String representativeRoleVn) {
		this.representativeRoleVn = representativeRoleVn;
	}

	@Column(name = "tax_code", length = 150)
	@JsonView(CompanyJsonView.PublicView.class)
	public String getTaxCode() {
		return this.taxCode;
	}

	public void setTaxCode(String taxCode) {
		this.taxCode = taxCode;
	}

	@Column(name = "email", length = 50)
	@JsonView(CompanyJsonView.PublicView.class)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "fax", length = 50)
	@JsonView(CompanyJsonView.PublicView.class)
	public String getFax() {
		return this.fax;
	}

	public void setFax(String fax) {
		this.fax = fax;
	}

	@Column(name = "telephone", length = 50)
	@JsonView(CompanyJsonView.PublicView.class)
	public String getTelephone() {
		return this.telephone;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	@Column(name = "country_id", length = 3)
	@JsonView(CompanyJsonView.PublicView.class)
	public String getCountryId() {
		return this.countryId;
	}

	public void setCountryId(String countryId) {
		this.countryId = countryId;
	}

	@Column(name = "active")
	@JsonView(CompanyJsonView.PublicView.class)
	public Boolean getActive() {
		return this.active;
	}

	public void setActive(Boolean active) {
		this.active = active;
	}

	@Transient
	@JsonIgnore
	public int getFixedMargin() {
		int value = 0;
		for (CompanyOption companyOption : companyOptions) {
			if (companyOption.getName().equals(CompanyOptionType.fixedMargin)) {
				value = Integer.valueOf(companyOption.getValue());
			}
		}
		return value;
	}

	public void setFixedMargin() {

	}

	@Transient
	@JsonIgnore
	public CompanyOption getFixedMarginObject() {
		for (CompanyOption companyOption : companyOptions) {
			if (companyOption.getName().equals(CompanyOptionType.fixedMargin)) {
				return companyOption;
			}
		}
		return null;
	}

	public void setFixedMarginObject() {

	}

	@OneToMany(mappedBy = "company", cascade = CascadeType.ALL, fetch = FetchType.EAGER)
	@OrderBy("id asc")
	@Sort(type = SortType.NATURAL)
	@JsonIgnore
	public SortedSet<CompanyOption> getCompanyOptions() {
		return companyOptions;
	}

	public void setCompanyOptions(SortedSet<CompanyOption> companyOptions) {
		this.companyOptions = companyOptions;
	}

	public CompanyOption makeEmptyCompanyOption() {
		CompanyOption option = new CompanyOption();
		option.setName(CompanyOptionType.fixedMargin);
		option.setCompany(this);
		return option;
	}

	@ManyToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	public List<CompanyTypeMaster> getCompanyTypes() {
		if (companyTypes == null) {
			companyTypes = new ArrayList<>();
		}
		return companyTypes;
	}

	public CompanyMaster setCompanyTypes(List<CompanyTypeMaster> companyTypes) {
		this.companyTypes = companyTypes;
		return this;
	}

	public CompanyMaster addCompanyType(CompanyTypeMaster companyType) {
		getCompanyTypes().add(companyType);
		companyType.addCompany(this);
		return this;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "country")
	public Country getCountry() {
		return country;
	}

	public CompanyMaster setCountry(Country country) {
		this.country = country;
		return this;
	}

	public boolean isHasType(String localName) {
		boolean flag = false;
		List<CompanyTypeMaster> companyTypeMasters = this.getCompanyTypes();
		for (CompanyTypeMaster companyTypeMaster : companyTypeMasters) {
			if (companyTypeMaster.getLocalName().equals(localName)) {
				flag = true;
			}
		}
		return flag;
	}

	public CompanyMaster setHasType(boolean hasType) {
		this.hasType = hasType;
		return this;
	}

}
