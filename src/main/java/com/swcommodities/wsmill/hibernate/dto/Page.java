package com.swcommodities.wsmill.hibernate.dto;
// Generated Feb 18, 2014 3:38:53 PM by Hibernate Tools 3.2.1.GA

import java.beans.Transient;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Page generated by hbm2java
 */
@Entity
@Table(name = "page")
public class Page implements java.io.Serializable, Comparable<Page> {

	private int id;
	// parent
	private Page page;
	private String name;
	private String url;
	private String servlet;
	private Byte accessStyle;
	//child
	private Set<Page> pages = new HashSet<>(0);
	// itself or child
	private Set<Authorization> authorizations = new HashSet<>(0);
	// menu itself
	private Set<Menu> menus = new HashSet<>(0);
	private boolean selected = false;

	public Page() {
	}

	public Page(int id) {
		this.id = id;
	}
    
    public Page(Integer page, String name, String url) {
        if(page != null) {
            this.page = new Page(page);
        }
        this.name = name;
        this.url = url;
        this.accessStyle = Byte.valueOf("1");
    }
    
    public Page(String name, String url) {
        this.name = name;
        this.url = url;
        this.accessStyle = Byte.valueOf("1");
    }

	public Page(int id, Page page, String name, String url, String servlet, Byte accessStyle, Set<Page> pages,
			Set<Authorization> authorizations, Set<Menu> menus) {
		this.id = id;
		this.page = page;
		this.name = name;
		this.url = url;
		this.servlet = servlet;
		this.accessStyle = accessStyle;
		this.pages = pages;
		this.authorizations = authorizations;
		this.menus = menus;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent")
	public Page getPage() {
		return this.page;
	}

	public void setPage(Page page) {
		this.page = page;
	}

	@Column(name = "name", length = 175)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "url", length = 175)
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Column(name = "servlet")
	public String getServlet() {
		return this.servlet;
	}

	public void setServlet(String servlet) {
		this.servlet = servlet;
	}

	@Column(name = "access_style")
	public Byte getAccessStyle() {
		return this.accessStyle;
	}

	public void setAccessStyle(Byte accessStyle) {
		this.accessStyle = accessStyle;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "page")
	public Set<Page> getPages() {
		return this.pages;
	}

	public void setPages(Set<Page> pages) {
		this.pages = pages;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "page")
	public Set<Authorization> getAuthorizations() {
		return this.authorizations;
	}

	public void setAuthorizations(Set<Authorization> authorizations) {
		this.authorizations = authorizations;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "page")
	public Set<Menu> getMenus() {
		return this.menus;
	}

	public void setMenus(Set<Menu> menus) {
		this.menus = menus;
	}

	@Transient
	public boolean getSelected() {
		return selected;
	}

	public void setSelected(boolean selected) {
		this.selected = selected;
	}

    @Override
    public int compareTo(Page o) {
        if(getPage() == null) {
            return -1;
        }
        else if(o.getPage() == null) {
            return 1;
        }
        if(getPage().getId() > o.getPage().getId()) {
            return 1;
        } else if(getPage().getId() < o.getPage().getId()) {
            return -1;
        }
        return 0;
    }
	
    
    
	

}
