package com.swcommodities.wsmill.hibernate.dto;
// Generated Feb 18, 2014 3:38:53 PM by Hibernate Tools 3.2.1.GA


import java.util.ArrayList;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * CompanyType generated by hbm2java
 */
@Entity
@Table(name="company_type_master")
public class CompanyTypeMaster extends AbstractTimestampEntity implements Comparable {
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private int id;

    @Column(unique = true)
    private String name;

    @Column(unique = true, name = "local_name")
    private String localName;

    @ManyToMany(mappedBy = "companyTypes", fetch = FetchType.LAZY)
    private List<CompanyMaster> companies;

    public int getId() {
        return id;
    }

    public CompanyTypeMaster setId(int id) {
        this.id = id;
        return this;
    }

    public String getName() {
        return name;
    }

    public CompanyTypeMaster setName(String name) {
        this.name = name;
        return this;
    }

    public List<CompanyMaster> getCompanies() {
        if(companies == null) {
            companies = new ArrayList<>();
        }
        return companies;
    }

    public CompanyTypeMaster setCompanies(List<CompanyMaster> companies) {
        this.companies = companies;
        return this;
    }

    public CompanyTypeMaster addCompany(CompanyMaster companyMaster) {
        getCompanies().add(companyMaster);
        return this;
    }

    public String getLocalName() {
        return localName;
    }

    public CompanyTypeMaster setLocalName(String localName) {
        this.localName = localName;
        return this;
    }

    @Override
    public String toString() {
        return String.format("CompanyTypeMaster, id: %s, name: %s, localName: %s", getId(), getName(), getLocalName());
    }
    
    @Override
    public int compareTo(Object o) {
        CompanyTypeMaster companyTypeMaster = (CompanyTypeMaster) o;
        return this.getName().compareToIgnoreCase(companyTypeMaster.getName());
    }
}
